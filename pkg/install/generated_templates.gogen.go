// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-config.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\x8f\x16\x6f\xdd\x82\x1e\xf7\x26\x05\xc1\x83\x5e\x14\xef\xc3\x66\xb6\x1d\xdc\x26\x4b\x32\xdb\x0a\x31\xff\x5d\x36\xa1\xcb\x2a\x9e\x32\xc3\xbc\xf7\x65\x5e\x92\x12\xa4\xc7\xfe\xe0\x5d\x2f\xc7\x27\x19\xf8\xe0\x9d\xb2\x53\x34\x39\x9b\xa6\x69\xcc\x16\xef\x27\x46\xef\x87\xc1\x5f\xc5\x1d\x21\x11\x53\x64\x0b\xf5\x18\x83\xbf\x88\x65\x10\xba\x62\x9f\x02\xa9\x78\x87\xde\x07\xf4\xc3\xf4\x65\xf7\x66\x8b\xe7\x85\xfe\x18\xeb\xf9\x42\xe3\x4c\x89\xac\x33\x44\xc3\xc4\x3b\xe8\x89\xff\x40\x24\xa2\x0b\x4c\xca\xd6\x6c\x41\x11\x84\xc5\xbd\x83\xd7\x13\x87\xab\x44\x86\xe8\x4a\x59\x75\x6f\xdc\x05\xd6\xbd\xa1\x51\x3e\x38\x44\xf1\xae\xc5\xe5\xde\x7c\x8a\xb3\x2d\x7e\xe5\x5d\x6f\x94\xf3\x52\xa7\x04\x1e\x22\x23\xe7\x8a\x9a\x7b\x67\x91\xb3\x39\xb3\x92\x25\xa5\xd6\x00\x8e\xce\xdc\x96\x9c\x4d\xdd\xdc\xe0\x46\x7f\xa5\x33\xc7\x91\x3a\x2e\xaf\x58\xa5\xa5\x2f\xf7\xaf\xc6\x65\x9a\x52\x73\xe3\x57\x76\x4a\x18\x83\x38\xed\xb1\xb9\x8b\x9b\xff\x3e\xe7\x1b\xe2\xec\x5c\x3c\xcc\xae\x15\xe0\x27\x00\x00\xff\xff\x02\xd2\xd6\x67\xcf\x01\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 8042,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdd\x73\xdb\x36\x12\x7f\xf7\x5f\xb1\xa3\xdc\x4c\xe2\x19\x91\xb2\xea\xb6\x77\xc3\x9e\x3a\x97\xe6\xc3\xf5\xa5\x49\x3d\x76\x72\x37\x7d\xaa\x21\x72\x25\x62\x04\x02\x3c\x2c\x28\x55\xe3\xe9\xff\x7e\xb3\x00\x3f\x40\x49\x76\x72\x79\xbb\x3c\xc4\x36\xb9\x58\x2c\x7e\xfb\xf5\xc3\x32\x49\x92\x33\x51\xcb\x7f\xa1\x25\x69\x74\x06\xa2\xae\x69\xb6\x9d\x9f\x6d\xa4\x2e\x32\x78\x8d\xb5\x32\xfb\x0a\xb5\x3b\xab\xd0\x89\x42\x38\x91\x9d\x01\x68\x51\x61\x06\x2b\xd5\xfc\xf1\xf0\x00\x72\x05\xe9\x07\x51\x21\xd5\x22\x47\xf8\xf3\xcf\xf6\xbd\xff\x33\x83\x87\x87\xf1\xdb\x87\x07\x40\x5d\xb0\x18\xd5\x98\xb3\x32\x8b\xb5\x92\xb9\xa0\x0c\xe6\x67\x00\x84\x0a\x73\x67\x2c\xbf\x01\xa8\x84\xcb\xcb\x5f\xc4\x12\x15\x85\x07\xf1\xde\x2c\xed\xac\x70\xb8\xde\x87\x97\x6e\x5f\x63\x06\xb7\x98\x5b\x14\x0e\xcf\x00\x1c\x56\xb5\x12\x0e\x5b\x65\xd1\x09\xf8\x9f\xd0\xda\x38\xe1\xa4\xd1\xbd\x72\x80\xda\x9a\x0a\x5d\x89\x0d\xa5\xd2\xcc\x6a\x63\x5d\x06\x93\xcb\x8b\xcb\xf9\x04\x9e\x81\x43\xa5\x22\x09\x70\x06\x28\xb7\xa2\x46\x98\x55\xe8\xac\xcc\x89\x0f\x57\x1b\xa9\xdd\x73\x02\x5e\x9c\xb6\x8a\xd5\xe8\x0c\x07\xa7\x00\xe8\xb0\xf0\xaf\x4c\x81\x77\x23\x14\xf8\xdf\x12\x9d\x48\x37\xcd\x12\xad\x46\x87\xde\x38\x43\x19\x28\xa9\x5b\x15\x0c\x9d\xdd\xca\x1c\x5f\xe6\xb9\x69\xb4\xfb\x30\xde\x01\x60\x6b\x54\x53\x61\x6f\x43\xd2\xda\xb0\x96\x2e\xd9\xe0\xbe\xdf\x88\x18\x3e\x37\x6c\xdc\x3d\x19\xf4\x25\xbc\xa4\xf0\x91\x11\x49\x15\xb8\x12\x8d\x72\xef\x4d\x81\x19\x5c\x7c\x7b\x71\x01\xcf\x60\x57\xa2\x86\x8a\xad\xc1\x02\x2c\x8a\x22\x31\x5a\xed\xa7\xb0\x43\xd8\x19\xfd\xdc\xc1\x12\x41\x2c\x15\x32\x90\x79\x59\x99\xe2\xac\x55\xf8\x0c\x3e\x96\x92\x40\x12\x08\x70\x55\xbd\x22\x68\x08\x0b\x58\x19\x0b\x6b\xd4\x68\x85\x93\x7a\x0d\x77\x77\x3f\xc3\x06\xf7\x94\xc2\xb5\x86\x77\x7f\x23\xf8\x71\x01\xf3\x74\x7e\x31\xed\xb5\x74\x7b\x87\x23\x10\x08\x8b\xb1\x1d\x64\xd8\x14\x8d\x58\x80\x00\xc2\x5a\x70\x34\xb5\x40\xc1\x0e\x7b\x35\xb9\xd0\xb0\xb3\xd2\xb1\xa1\xe9\x69\xfc\xd6\xa8\x7b\x30\xb0\xaa\xdd\xfe\xb5\xb4\x31\x88\x15\x16\xb2\xa9\x32\x78\x8f\x95\xb1\xfb\xf8\x9c\x08\x2b\xa3\x94\xd9\xf1\x89\xda\xad\x25\xf9\xa3\x36\xc4\xcf\x04\xe4\x0d\x39\x53\x49\x46\x60\xa3\xcd\x4e\xff\x5e\x1a\x72\xd4\xab\x58\x49\x85\x53\xd8\x95\x32\x2f\x61\x6f\x1a\xd8\x49\xa5\xc2\xa1\x9c\x81\xc2\x70\x82\xf2\x63\x5e\xc4\xbf\x58\x30\x3b\xcd\x66\xf7\x0a\x2c\xd6\x06\xac\x70\x25\x5a\x70\xa5\xd0\xed\xc6\x6b\xe9\xca\x66\x09\x86\x1f\x22\x28\xb9\xc1\x14\x7e\x33\xcd\x73\xa5\x40\x28\x32\xdd\x16\x63\xb0\x41\x3a\x90\xda\x19\xbf\x26\x37\xda\x09\xa9\xd1\x4e\x61\x89\xca\xec\x52\xb8\xc3\x01\xd5\xd2\xb9\x9a\xb2\xd9\xac\x30\x39\xa5\x1c\x58\x79\xc1\x61\x8d\x7a\xc6\x39\x4b\x6e\xb6\x6e\x64\x81\x34\x6b\x08\x93\xda\xca\xad\x70\xe8\x43\x8f\x0f\x92\x96\xae\x52\xbd\xa6\xce\x17\x44\x65\x92\x1b\xbd\x92\xeb\xfe\x15\x40\x78\xf0\x5e\xd4\x59\xf4\x30\xce\xc0\x24\x5a\xf6\xb5\x7e\xf1\xa9\x39\x0b\x4a\x86\xf0\xfb\xac\x4f\x76\x92\x4a\x7e\x52\x8a\x2d\x82\x80\x42\xae\x56\x68\xb9\xda\x76\x1a\xda\xac\x1a\x2a\xaa\x77\x41\x50\x17\x3b\x81\xab\xd2\x56\x16\xd8\xc1\xbe\x92\xeb\x4a\xd4\x83\x21\xd2\x95\x20\x34\xa0\x76\x76\xef\xcf\x70\x1f\x84\xee\xa7\x20\x74\x01\x8d\xce\x4d\xc5\x65\xde\xaf\x0f\xa7\x7d\xef\xdd\x29\x74\xd1\x6b\x41\xbd\xf5\x1a\x24\x52\xeb\xcf\x23\x0f\x30\x0c\x5f\xe1\x81\x68\xd9\x67\x3d\xe0\x2b\x81\x33\x20\x2b\x2e\xb0\x70\x75\x73\xe5\x8b\x00\xbc\xe0\x63\x91\x5c\x6b\xa9\x87\xcd\xf9\x70\x5b\xb4\x72\x25\x73\x5f\xe9\xa1\x6e\x6c\x6d\x08\xe9\xfc\x0b\x80\xec\xb5\x84\xf2\x11\x50\x64\x80\x78\xbf\x2f\x00\x0e\x84\x5d\x0f\x69\xfa\x08\x62\xeb\x7a\xcd\xf5\x83\x22\x68\xc6\x25\xf8\xd9\x23\x45\xf8\x78\xdd\x89\x22\xdc\xc1\xf9\xf0\x90\xf8\x46\xfd\xca\x83\xfc\x56\x2a\x7c\x65\xb4\x63\xbb\x7d\xc3\xfe\x32\xc4\x3b\x68\x44\xeb\xd1\xc6\x06\x4c\x19\x78\xb6\xa9\x18\x69\x1a\xd6\x87\x7e\x5c\xb0\x01\x8c\x52\xd2\x26\x5b\xc2\x85\x0b\x18\x3f\xc6\x4a\x49\x3d\x00\x6e\x6a\xaf\x58\x52\xb7\x67\x91\xc2\x75\x6f\xfe\x4b\x7a\xd5\x45\x14\x8b\x10\x3a\xb6\xce\xd9\x06\xa7\x23\xb7\x8d\xad\xe4\x66\x42\xd4\x54\xe1\x2c\xdc\x79\xa0\x57\x33\x05\xc3\xd5\x6f\x27\x09\x7d\x01\xeb\x45\x7b\x5d\xdd\x92\x3b\xef\x87\xf4\x24\xac\xb1\x5d\x3d\xac\x49\x1c\xe7\xed\xc1\x03\x34\x7d\x77\x38\xca\x8f\x83\xec\x18\x25\x14\x6f\xc9\x0c\x2a\xe9\x77\x68\x8d\x78\xa1\x8d\x3b\x61\xc9\xf9\xff\x64\xca\x17\x74\xff\x2f\xb0\xa6\x65\x78\x67\xfd\xf1\x42\x17\x38\xe2\x1e\x11\x3b\x69\xa3\xc6\xa2\xef\xd1\xda\xc0\x24\x0b\x5d\x60\x02\xb2\x12\x6b\xa4\x3e\xca\x52\x78\x2b\x75\xe1\x23\xa9\xe2\x96\x66\x31\x1f\x2a\x66\x68\x67\x0a\x05\x21\x37\x2e\xbf\x94\x0b\x00\x93\x5b\x10\xae\xef\x39\x65\xb3\x4c\x0b\x93\x6f\xd0\xa6\xb9\xa9\x66\x76\x16\xfa\x8f\xff\x31\x73\xa2\x4f\xdb\xae\x86\x30\x49\x65\x02\xcb\xbb\x3a\xb1\x06\xb6\x34\xed\x65\xfc\x36\x19\xb4\x0a\xa5\x89\xb5\x65\xf3\x74\xfe\xd7\x74\x3e\x96\xbd\x69\x94\xba\x31\x4a\xe6\xfb\x0c\xae\x57\x1f\x8c\xbb\xb1\x48\xf1\x29\x2c\x92\x69\x6c\x8e\x14\xbb\xc2\xe2\x7f\x1a\x24\x37\x7a\x06\x90\xd7\x4d\x06\xdf\x5d\x54\xa3\x87\x95\xa7\x19\x19\x7c\xff\xed\x7b\x39\x70\x5b\x63\xe3\xc5\xc9\xe0\x99\x1b\xcf\x73\x2f\x2f\x2e\x99\xb5\x49\xbd\x32\xb6\xf2\x49\x23\x54\x2f\xad\xe4\x16\x35\x12\xdd\x58\xb3\xc4\xd8\x02\x86\xf4\x6a\x1c\x33\x61\xab\xa0\x70\xfc\x58\xb8\x32\x83\x99\xa8\x65\x40\x7a\xfb\xfd\x4c\x16\xa8\x9d\x74\xfb\xb4\x6e\x96\x91\xac\xd4\xd2\x49\xa1\x5e\xa3\x12\xfb\x3b\xee\x0d\x05\x65\xf0\x5d\x24\xe0\x64\x85\xa6\x71\x27\xde\x31\xc1\x93\xff\x1f\xa6\x46\x0d\x63\xe4\x98\xd3\xd4\x1c\x02\xc5\xba\x09\x96\xa1\xcb\xbd\x65\xc5\x8c\xa8\x0c\x15\xca\x5f\x97\x40\x99\xb6\xd7\xad\xd9\x65\x20\x75\x88\xb9\xe7\x14\xd6\x10\x95\xb3\x51\x0e\x77\x98\xfd\xaa\xd5\x3e\xf3\x65\x94\xb5\x31\xff\xf6\xdd\x71\xd9\x92\x0a\x4e\xa9\x1a\xed\xca\xd8\x1c\x59\x69\x20\xdc\xcc\xb7\x1f\x33\x3c\xe6\xc4\x63\xdb\xb7\xc2\xb6\xb6\x07\xb1\xaf\x33\x3f\xca\xd1\x6b\x9d\xab\xc6\x77\x6d\xbe\x36\x04\x72\xd5\x75\xf4\xc0\x4b\x3f\x43\xa3\x3b\x22\xfd\x03\x2f\x3d\xa0\xb8\x43\x33\x2b\x30\x57\xc2\xf2\x75\x61\x69\xb6\x51\x01\x78\x82\x82\x86\xd6\x1c\x1f\xde\x1a\xe3\x66\x29\x51\xf9\xe8\x01\x84\x1e\xed\x3a\x19\xe8\xd1\x24\xec\x3c\xed\x44\x22\x0d\xa8\xb7\xd2\x1a\xed\xc9\x48\xe0\x79\x93\x77\x9f\x7e\x7a\xf3\xea\xd7\x0f\x6f\xaf\xaf\x26\x81\x7e\x4c\x19\x0f\xb3\x45\x6b\xc7\x5c\x31\x52\xe3\x9b\xfd\x72\x1f\x98\x9c\x53\xa7\xce\x78\x44\xf2\x8e\xcf\x38\x04\x27\x0b\x3f\x7a\x50\x26\x15\x7c\x5b\xee\x76\xe3\x12\x1d\xd1\xe0\xd6\x3a\xef\x93\x48\xc5\x21\x99\x8e\x9d\xee\x99\x74\x77\xed\x13\x1a\x84\x72\x68\x35\x5f\xeb\x8e\x2c\x5e\x59\x53\xf5\x5c\xa6\x62\x12\x20\x88\xc3\xad\x65\x74\x0c\x83\x32\xf9\x86\x8e\x9d\x8d\x7a\x9b\x9d\xc0\x65\x80\x7b\x84\xcb\x56\xa8\x06\x8f\x30\xf9\x5c\x10\x1f\xc6\x40\xc7\xf7\x9e\x88\x00\xa6\x9b\x63\x9a\xf9\x04\xd1\x7c\x24\x2e\x59\x2a\x30\xeb\x91\xdc\xb8\x3e\x0c\x46\xb7\xf3\x9f\x63\x5a\x39\x10\x82\x2f\xe2\x1d\x8f\x44\x4f\xb4\xcf\x21\xab\x78\x2c\xeb\x77\x42\x7b\x3a\x48\x4d\x5d\xab\x3d\xfc\xfc\xf1\xe3\x0d\x2c\x05\xc9\x1c\x44\xe3\x4a\xe6\xa2\xbe\x8a\x0b\x15\x18\xc5\x70\x0f\x66\x85\x5b\x29\x3c\xe8\xf7\x57\xd7\x1f\x7f\x7f\xf9\xe9\xe3\xcf\x9f\xee\xde\xdc\xde\x7b\xa8\xfb\x47\xef\xde\xfc\x76\x3f\x4a\xb6\xad\xb0\x52\x2c\x15\x52\x77\x31\x8c\x14\xd2\x88\x2e\xb6\xb1\xf3\xd6\x9a\x6a\x1c\x3f\x41\xec\x16\x57\xd9\x08\xf5\x11\x0b\xe4\xa2\xca\x47\x18\x00\x60\x7f\x67\x23\x3c\x02\x04\x61\x36\x83\x05\xb3\x80\x5c\xe4\x25\x53\x6f\x3d\xca\xab\xfe\x3a\xc9\x48\xb1\xf6\x69\xa4\xc5\xd8\xf6\xbe\x18\x2d\x68\x67\x4b\x7e\xe1\xd4\x6f\x92\x0b\xdd\x61\xec\x4a\xa4\x38\x0e\x87\x3b\x84\xdb\x19\xb6\xb2\x61\x9c\x7c\xb6\xfb\x09\x9a\x77\x2d\x94\x66\xe7\xe7\x3e\x46\x6b\xcc\xbd\xcb\xa4\x1b\xc7\x6d\x92\xf4\x07\xf0\x97\x7e\xde\x7c\xd1\x3f\x4a\xdb\xcb\x4e\x4a\xdb\x3c\xcd\x55\x43\x0e\x6d\xca\xcd\x43\xc5\x90\x7c\xa2\x50\xe7\x06\x28\x5e\x05\xd1\xeb\x9b\xd1\xa1\xb8\xe4\x11\x3a\x3f\x57\x1a\x67\xd5\x60\x43\x27\xcf\xd1\xe5\x2c\x4b\xfa\x49\x4f\x14\xe7\xb1\xc5\xad\xf4\xe2\x6c\xc4\x70\x25\x41\xd5\x90\x9f\x7c\x79\xf4\x24\x16\x21\x95\x97\xbe\xa9\x7a\x7e\xe9\x07\x5e\x2f\xba\x29\xd2\x79\x6c\x4b\x57\xd8\x42\x09\xe0\x00\x8e\xe6\x5e\x23\x43\xb8\x11\x85\xe6\x9a\x14\xd2\x2e\x8e\x5a\x6e\x6c\xd6\x6d\xc4\x6e\x07\xe7\x7d\xba\xfd\x25\x0c\xe6\x84\x5e\x87\x77\x57\xd2\xf9\x61\x11\x49\x67\xec\xbe\x6f\x15\x6f\x99\x95\x47\xea\x9e\xca\x39\x0e\x9b\xe8\xec\x6d\xca\x9c\x4c\xa7\x38\x17\x3a\xde\xfe\x97\x17\x71\x66\x9e\x67\xc3\xdf\xef\xde\xfc\x76\xfe\x8f\x30\xb2\xf2\x94\xbe\x21\xb4\xb3\xc1\xd8\x34\x4e\x74\xc6\x87\xd3\xa9\xb1\x6a\xf1\xf0\x00\xe9\x95\x74\x7c\xd8\x51\xc9\x0a\x12\x4b\x2b\x74\x5e\x76\x42\x3f\xf9\xbf\xc2\x14\x9b\xcb\xde\x95\xf4\x15\x8b\x4e\xad\x64\xfe\xc8\xeb\xee\x7c\xa4\xd0\x3f\x8d\xd4\xd1\x82\xc9\x74\xd2\x0e\xc3\x15\x61\xbc\xfc\xe9\xa2\x66\x91\x03\x2f\x0f\xd3\x86\x4a\x68\xb9\xe2\xfb\x00\xe7\x10\xc9\x02\x6d\x70\xc7\xc1\xad\xca\xcf\xe2\x0c\x21\x34\xba\x40\x7b\xe0\x63\x8b\x4a\x38\xb9\x45\x4f\x77\xa9\x8b\xc0\xf5\xc8\xcf\x07\x39\xd9\x1f\x8e\x9a\x65\x21\xed\x7c\x1a\x7e\x7e\xd3\x4f\xf6\x07\x70\xfc\xe4\xfe\x14\x38\x7e\x1c\xde\xa1\xda\x49\x9d\x50\xf0\x89\xd0\x9e\x5a\xcf\xce\xed\x3d\xc7\x32\x70\x7a\xfd\x9b\x4a\xc8\x93\x06\x20\xbf\xe8\x34\x74\x52\xc3\xb7\x89\x93\xee\x40\x2e\x25\x3b\xc3\x80\xa2\xf6\x63\x6b\xc6\x89\xd9\x82\x74\x07\x83\xa7\x18\xab\xb6\xef\xb6\x5d\x75\xf1\x44\x9b\xed\x56\xb4\xba\x78\xd5\xe2\xef\x1b\xdc\x83\x2c\x7e\x7c\x8a\x42\x45\xd6\xf0\x52\xe1\x1a\x8b\xa3\xa9\xd7\x89\x3d\xfc\xeb\x7d\xd2\xcb\xd3\xa8\x4c\x75\x55\x1a\xa4\x83\x52\x90\x6f\xff\x46\xab\x3d\x88\x3c\x47\x0a\x95\xbc\xc4\x30\x38\x7e\xd1\xcd\x28\xef\x57\x42\x11\xde\x9f\x9f\x75\x53\x91\x2b\xe9\x6e\x5b\xde\x70\xca\x07\x9d\x52\x2f\x7f\x9c\x07\xa7\xc5\x4e\xf8\x87\x9c\x6d\x72\x17\xec\xdd\xf9\x11\x02\xd3\xca\xc6\x01\xed\x75\x0e\x4b\x63\x36\x1b\xc4\x9a\xa3\xbd\x37\x75\xb2\x96\x6e\x32\x85\x0a\x05\x03\xcd\x85\x0c\x84\xbf\xd7\xb7\x09\xd0\xd4\xe4\x2c\x8a\xaa\xcf\x84\xf3\x03\xc3\x58\x75\x42\x4e\x38\x5c\x70\x61\x79\x34\x5e\x34\xfe\xe1\xba\xa0\x89\x3a\x9d\xd0\x30\xe9\xf6\x98\x74\x7d\x28\x52\xf2\x02\xd3\x75\x3a\x85\x7f\x23\xb3\xd9\x57\xca\x34\xc5\x79\xea\x87\x6a\xce\x6c\x30\xcc\xc5\x84\x75\x32\x6f\x94\xb0\x9d\x33\x5a\x2d\x87\x2d\xb4\xdd\x75\xb1\x23\xae\x9f\x39\xeb\x4a\x77\xac\x37\xdd\x19\xbb\xa1\xfe\x82\x7b\xb0\xcc\x6f\xb4\x10\xcb\x7c\xfe\xcd\xe5\xf1\xff\xf1\x81\xdf\x84\xe8\xeb\xaa\x51\xff\x81\xc6\xe8\x27\x42\xe3\x7d\x2b\x7d\x35\x08\x1f\x44\x48\xa7\x2f\x19\xf4\x2d\x3c\xf7\x7c\x3c\x5a\x4e\x2d\xf1\x1b\x3f\x12\x3a\x77\x68\xb7\x27\x3e\xdd\xf1\x25\x64\x60\x3e\x9c\xa3\x3f\xc4\x2d\x58\x6c\xb8\x7d\x85\x28\x23\x74\xd1\xf7\xc0\xe7\xd1\x27\xc5\xe8\xdb\x20\x3b\xc7\x8f\xaa\xfd\x45\x20\x1d\x9d\x52\x49\x72\xa8\x93\xd6\x84\x45\x76\x79\x71\x39\xef\x41\xba\xc5\xb5\x24\x67\xf7\xaf\x25\x31\xc4\x77\xb9\xd0\x3e\x5c\x0f\x90\xb2\xad\x58\x52\x04\xb9\x84\x5a\xc1\xf8\xd8\x6d\x4d\x7c\x59\x14\x32\x0c\x76\xb8\x69\xbf\xe4\x0b\xc3\x08\xc6\xe1\xfd\xc0\xdb\x46\x24\xdc\x7a\x32\xf0\x19\x3d\x89\xff\xec\x1b\x3f\x19\x5b\xd2\xfe\xd6\x6d\xfa\x6b\xdd\x6e\xf9\xfa\xc3\x5d\x47\xc2\x68\xda\x8f\x6f\x5b\x4a\x06\xba\x30\x8e\xba\xd1\x70\x25\xf6\x7e\x48\xa6\xb6\xc3\xbc\x57\x93\x32\x66\xd3\xd4\x20\x89\x1a\x24\x30\x1a\xc8\x54\x08\xef\xfa\xcf\xa6\xac\xbd\xa9\x69\x98\xc2\x17\x9a\xba\x39\xdc\xe4\x83\xd1\x38\x89\xdf\x84\x5b\x4d\x3c\x87\x0f\x9b\xd3\x78\x34\xdf\x5d\x6f\xbc\x7d\xa3\x37\xfd\xdd\x6f\x32\x9f\x9c\xfd\x37\x00\x00\xff\xff\x6b\x33\x36\xc3\x6a\x1f\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 967,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\x9e\xe4\x6b\x21\x25\x52\x2e\xdc\xa2\xa6\xad\x22\xb5\x91\xa5\x28\xbd\x8f\x97\x81\xac\xb2\x5f\xdd\x9d\x75\x4d\x51\xfe\x7b\x05\x76\x6c\x68\x32\x27\xe0\xbd\x79\xf3\x76\xf6\x51\x96\x65\xb1\x81\x65\xab\x48\x3d\x73\x8b\x96\x83\xf1\x83\x65\x27\xc8\x89\x5b\xec\x06\x7c\x33\xf9\x00\xf1\x98\x19\xc5\x06\xca\x3b\x21\xed\x38\x42\x5b\xea\x19\x96\x85\x5a\x12\xaa\x0a\x0a\xfa\x17\xc7\xa4\xbd\x6b\x40\x21\xa4\xab\x7d\x5d\xbc\x68\xd7\x36\xb8\x3b\xcb\x16\x6f\xf4\xa6\x00\x1c\x59\x6e\x2e\xd3\xc7\x11\xba\x43\xf5\x40\x96\x53\x20\xc5\x78\x7d\x3d\x91\xe6\xd7\x06\xe3\xb8\x46\xc7\x11\xec\xda\x89\x96\x02\xab\x49\x31\x72\x30\x5a\x51\x6a\x50\x17\x40\x62\xc3\x4a\x7c\x9c\x10\xc0\x92\xa8\xe7\x1f\xb4\x63\x93\x8e\x1f\xde\x19\x28\x00\x61\x1b\x0c\x09\x9f\x5a\x16\x66\xa7\x32\xab\xee\x8f\xfa\x81\x37\x2b\x33\xee\x5b\x7e\x5c\x99\x98\x6a\xc7\x42\xd5\x4b\xde\x71\x74\x2c\x9c\x2a\xed\xaf\x7c\x6a\x60\xb4\xcb\x87\x13\xe9\xbc\xe4\xf3\xb0\xf2\xc3\x61\x53\xcd\xd7\xb0\x00\x9a\xba\xba\xa9\xae\x3f\xaf\xf1\x6d\x36\x66\xeb\x8d\x56\x43\x83\xfb\xee\xc1\xcb\x36\x72\x9a\xee\xe3\x8d\x45\xb1\x5f\x1c\xac\x44\x69\x71\x53\x5f\x03\xd8\xe0\x27\x1d\xb4\xcd\x76\x9a\xe0\xe3\x30\x65\x21\x27\xfe\x04\xed\x60\xb9\xa7\xdd\x20\x9c\x96\x8d\xf7\xb8\xb1\x58\x35\x26\xfd\x97\xd1\xf9\x08\xef\x18\x5a\xd8\x2e\xe9\x01\x75\x7d\x5d\xd7\xd8\xe0\x8e\x3b\xca\x46\x10\x7c\xbc\xf8\xda\x4c\x9c\xfd\xfe\xf8\xf8\xe4\x94\xb7\x73\x3a\xc5\xa3\x67\x81\xf1\x7d\x82\xef\xc0\xa4\x9e\x11\xf9\x77\xe6\x24\x20\xd7\x22\x72\x0a\xde\x25\xae\xce\x42\x93\xea\xea\x84\xc7\x7d\x2a\xa3\xd9\xc9\xe5\x00\x8b\xdd\x6f\x7d\x94\xe6\xe8\xee\x14\xcd\xdb\xb6\x7d\x64\x95\xa3\x96\xe1\x8b\x77\xc2\x07\x99\x23\x7a\xac\xb4\x46\x9a\x85\x64\xcc\xee\x36\x3d\x25\x8e\x27\xb9\xff\xa1\xef\xd1\xe7\xf0\x1e\x23\x63\xfc\x9f\x6d\xd4\x7b\x6d\xb8\xe7\xaf\x49\x91\x21\x99\x7f\xaf\x8e\x4c\xe2\x4b\xfc\xff\x05\x00\x00\xff\xff\xec\xf7\xcf\x04\xc7\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
